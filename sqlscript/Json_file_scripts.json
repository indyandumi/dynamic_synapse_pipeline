{
	"name": "Json_file_scripts",
	"properties": {
		"content": {
			"query": "--First step query each json document as a record\nSELECT\n     *\nFROM\n    OPENROWSET(\n       BULK  'payment_type.json',\n       DATA_SOURCE = 'nyc_taxidata_raw',\n       FORMAT ='CSV',\n       PARSER_VERSION ='1.0',\n       FIELDTERMINATOR ='0x0b',\n       FIELDQUOTE = '0x0b',\n       ROWTERMINATOR ='0x0a'\n           )\n    WITH\n    (\njsonDoc NVARCHAR (MAX)\n    ) AS payment_type;\n\n--second step: use Jsonvalue function to create records with different field names\nSELECT JSON_VALUE (jsonDoc,'$.payment_type') payment_type,\n        JSON_VALUE (jsonDoc,'$.payment_type_desc' ) payment_type_desc\nFROM\n    OPENROWSET(\n       BULK  'payment_type.json',\n       DATA_SOURCE = 'nyc_taxidata_raw',\n       FORMAT ='CSV',\n       PARSER_VERSION ='1.0',\n       FIELDTERMINATOR ='0x0b',\n       FIELDQUOTE = '0x0b',\n       ROWTERMINATOR ='0x0a'\n           )\n    WITH\n    (\njsonDoc NVARCHAR (MAX)\n    ) AS payment_type;\n\n\n-- Assign columns data type and sizes using CAST function\n\nSELECT CAST (JSON_VALUE (jsonDoc,'$.payment_type') AS SMALLINT) payment_type,\n        CAST (JSON_VALUE (jsonDoc,'$.payment_type_desc' ) AS VARCHAR (15)) payment_type_desc\nFROM\n    OPENROWSET(\n       BULK  'payment_type.json',\n       DATA_SOURCE = 'nyc_taxidata_raw',\n       FORMAT ='CSV',\n       PARSER_VERSION ='1.0',\n       FIELDTERMINATOR ='0x0b',\n       FIELDQUOTE = '0x0b',\n       ROWTERMINATOR ='0x0a'\n           )\n    WITH\n    (\njsonDoc NVARCHAR (MAX)\n    ) AS payment_type;\n\n-- using openJson function to query the json file\n-- openjson function can deal with arrays in json file and also produce data in rows and colums\nSELECT payment_type, payment_type_desc\nFROM\n    OPENROWSET(\n       BULK  'payment_type.json',\n       DATA_SOURCE = 'nyc_taxidata_raw',\n       FORMAT ='CSV',\n       PARSER_VERSION ='1.0',\n       FIELDTERMINATOR ='0x0b',\n       FIELDQUOTE = '0x0b',\n       ROWTERMINATOR ='0x0a'\n           )\n    WITH\n    (\njsonDoc NVARCHAR (MAX)\n    ) AS payment_type\nCROSS APPLY OPENJSON(jsonDoc)\nWITH (\n    payment_type SMALLINT,\n    payment_type_desc VARCHAR(20)\n\n);\n\n\n-- Reading data from JSON with arrays\nSELECT CAST (JSON_VALUE (jsonDoc,'$.payment_type') AS SMALLINT) payment_type,\n        CAST (JSON_VALUE (jsonDoc,'$.payment_type_desc[0].value' ) AS VARCHAR (15)) payment_type_desc,\n         CAST (JSON_VALUE (jsonDoc,'$.payment_type_desc[1].value' ) AS VARCHAR (15)) payment_type_desc01\nFROM\n    OPENROWSET(\n       BULK  'payment_type_array.json',\n       DATA_SOURCE = 'nyc_taxidata_raw',\n       FORMAT ='CSV',\n       PARSER_VERSION ='1.0',\n       FIELDTERMINATOR ='0x0b',\n       FIELDQUOTE = '0x0b',\n       ROWTERMINATOR ='0x0a'\n           )\n    WITH\n    (\njsonDoc NVARCHAR (MAX)\n    ) AS payment_type;\n\n\n\n-- Query a jason file with array with out adding new colums , instead of adding new columsnwe add new record and keep the two fields intact\n\nSELECT payment_type, payment_type_desc_value\nFROM\n    OPENROWSET(\n       BULK  'payment_type_array.json',\n       DATA_SOURCE = 'nyc_taxidata_raw',\n       FORMAT ='CSV',\n       PARSER_VERSION ='1.0',\n       FIELDTERMINATOR ='0x0b',\n       FIELDQUOTE = '0x0b',\n       ROWTERMINATOR ='0x0a'\n           )\n    WITH\n    (\njsonDoc NVARCHAR (MAX)\n    ) AS payment_type\nCROSS APPLY OPENJSON(jsonDoc)\nWITH( \n    payment_type SMALLINT,\n    payment_type_desc NVARCHAR(MAX) AS JSON\n)\nCROSS APPLY OPENJSON(payment_type_desc)\nWITH (\n    sub_type SMALLINT,\n    payment_type_desc_value VARCHAR(20) '$.value'\n);\n\n---Query standard Json file\n\nSELECT rate_code_id,rate_code\nFROM\n    OPENROWSET(\n       BULK  'rate_code.json',\n       DATA_SOURCE = 'nyc_taxidata_raw',\n       FORMAT ='CSV',\n       PARSER_VERSION ='1.0',\n       FIELDTERMINATOR ='0x0b',\n       FIELDQUOTE = '0x0b',\n       ROWTERMINATOR = '0x0b'\n           )\n    WITH\n    (\njsonDoc NVARCHAR (MAX)\n    ) AS rate_code\nCROSS APPLY OPENJSON(jsonDoc)\nWITH \n( rate_code_id TINYINT,\n  rate_code VARCHAR(20)\n\n);\n\n--Query a formated classic json with multi line\n\nSELECT rate_code_id,rate_code\nFROM\n    OPENROWSET(\n       BULK  'rate_code_multi_line.json',\n       DATA_SOURCE = 'nyc_taxidata_raw',\n       FORMAT ='CSV',\n       PARSER_VERSION ='1.0',\n       FIELDTERMINATOR ='0x0b',\n       FIELDQUOTE = '0x0b',\n       ROWTERMINATOR = '0x0b'\n           )\n    WITH\n    (\njsonDoc NVARCHAR (MAX)\n    ) AS rate_code_multi_line\nCROSS APPLY OPENJSON(jsonDoc)\nWITH \n( rate_code_id TINYINT,\n  rate_code VARCHAR(20)\n\n);\n\n\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_discovery",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}